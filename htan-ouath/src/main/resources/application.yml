spring:
  application:
    name: hzero-oauth
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://db.hzero.org:3306/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
    hikari:
      # 连接池最小空闲连接数
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:20}
      # 连接池允许的最大连接数
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:200}
      # 等待连接池分配连接的最大时长（毫秒）
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}
  redis:
    host: ${SPRING_REDIS_HOST:redis.hzero.org}
    port: ${SPRING_REDIS_PORT:6379}
    database: ${SPRING_REDIS_DATABASE:3}
    jedis:
      pool:
        # 资源池中最大连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
        max-active: ${SPRING_REDIS_POOL_MAX_ACTIVE:50}
        # 资源池运行最大空闲的连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
        max-idle: ${SPRING_REDIS_POOL_MAX_IDLE:50}
        # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
        # 默认 -1 表示永不超时，设置5秒
        max-wait: ${SPRING_REDIS_POOL_MAX_WAIT:5000}
  resources:
    # 资源缓存时间，单位秒
    cache:
      period: 3600
    # 开启gzip压缩
    chain.gzipped: true
    # 启用缓存
    chain.cache: true
  mvc:
    throw-exception-if-no-handler-found: true
  thymeleaf:
    mode: LEGACYHTML5

server:
  servlet:
    session:
      # session 失效时间设置短一点，登录后让 Session 自动失效
      timeout: ${SERVER_SERVLET_SESSION_TIMEOUT:120}
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
    # 默认值为8，建议设置每个CPU核心一个线程
    io-threads: ${SERVER_UNDERTOW_IO_THREADS:4}
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
    # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
    worker-threads: ${SERVER_UNDERTOW_WORKER_THREADS:128}
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    buffer-size: ${SERVER_UNDERTOW_BUFFER_SIZE:1024}
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    # 默认false
    direct-buffers: true
    # HTTP POST请求最大的大小
    # 默认0，无限制，可设置10M
    max-http-post-size: 10485760

feign:
  hystrix:
    enabled: true

hystrix:
  threadpool:
    default:
      # 执行命令线程池的核心线程数，也是命令执行的最大并发量
      # 默认10
      coreSize: 1000
      # 最大执行线程数
      maximumSize: 1000
  command:
    default:
      execution:
        isolation:
          thread:
            # HystrixCommand 执行的超时时间，超时后进入降级处理逻辑。一个接口，理论的最佳响应速度应该在200ms以内，或者慢点的接口就几百毫秒。
            # 默认 1000 毫秒，最高设置 2000足矣。如果超时，首先看能不能优化接口相关业务、SQL查询等，不要盲目加大超时时间，否则会导致线程堆积过多，hystrix 线程池卡死，最终服务不可用。
            timeoutInMilliseconds: ${HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS:40000}

ribbon:
  # 客户端读取超时时间，超时时间要小于Hystrix的超时时间，否则重试机制就无意义了
  ReadTimeout: ${RIBBON_READ_TIMEOUT:30000}
  # 客户端连接超时时间
  ConnectTimeout: ${RIBBON_CONNECT_TIMEOUT:3000}
  # 访问实例失败(超时)，允许自动重试，设置重试次数，失败后会更换实例访问，请一定确保接口的幂等性，否则重试可能导致数据异常。
  OkToRetryOnAllOperations: true
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 1

mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true

hzero:
  captcha:
    # 是否启用验证码
    enable: true
  send-message:
    # 手机登录发送验证码模板代码
    mobile-login: HOTH.MOBILE_LOGIN
    # 修改密码发送验证码模板代码
    modify-login-password: HOTH.MODIFY_PASSWORD
  oauth:
    # 认证服务器 自定义资源匹配器
    custom-resource-matcher: ${HZERO_OAUTH_CUSTOM_RESOURCE_MATCHER:false}
    # 验证 client 时不检查 client 的一致性
    not-check-client-equals: ${HZERO_OAUTH_NOT_CHECK_CLIENT_EQUALS:false}
    # 移动设备ID参数
    device-id-parameter: ${HZERO_OAUTH_DEVICE_ID_PARAMETER:device_id}
    # 登录设备来源参数
    source-type-parameter: ${HZERO_OAUTH_SOURCE_TYPE_PARAMETER:source_type}
    # web端用户是否只允许在一处登录
    enable-web-single-user-login: ${HZERO_OAUTH_ENABLE_WEB_SINGLE_USER_LOGIN:false}
    # 移动端用户是否允许在一处登录
    enable-app-single-device-login: ${HZERO_OAUTH_ENABLE_APP_SINGLE_DEVICE_LOGIN:false}
    # 移动端开启图形验证码校验，默认不开启
    enable-app-captcha: ${HZERO_OAUTH_ENABLE_APP_CAPTCHA:false}
    # 始终开启图形验证码校验，默认否
    enable-always-captcha: ${HZERO_OAUTH_ENABLE_ALWAYS_CAPTCHA:false}
    # 标题
    title: ${HZERO_OAUTH_TITLE:HZERO}
    login:
      # 允许使用的登录名，默认有 用户名、邮箱、手机号
      support-fields: ${HZERO_OAUTH_LOGIN_SUPPORT_FIELDS:username,email,phone}
      # 手机登录参数
      mobile-parameter: phone
      # 前端默认模板
      default-template: ${HZERO_OAUTH_LOGIN_DEFAULT_TEMPLATE:main}
      # 默认登录成功跳转地址
      success-url: ${HZERO_OAUTH_LOGIN_SUCCESS_URL:http://hzeronf.saas.hand-china.com/workplace}
    logout:
      # 退出时是否清理token
      clear-token: ${HZERO_OAUTH_LOGOUT_CLEAR_TOKEN:true}
  data:
    permission:
      # 数据库所有者模式，例如 SqlServer 下的 dbo/guest
      db-owner: ${HZERO_DB_OWNER:}
  ### Cas 配置 ###
  cas:
    enabled: false
    server:
      base-url: http://sso.server.com:8443/cas
    service:
      base-url: http://127.0.0.1:8020/oauth
      failure-handler-url: http://sso.server.com:8443/cas/login



logging:
  level:
    org.jasig.cas: ${LOG_LEVEL:debug}
    org.hzero: ${LOG_LEVEL:debug}
    io.choerodon: ${LOG_LEVEL:debug}

